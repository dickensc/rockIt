*equalP(int_,int_,int_,int_,float_)
*beforeP(int_,int_,int_,int_,float_)
*meetsP(int_,int_,int_,int_,float_)
*overlapsP(int_,int_,int_,int_,float_)
*startsP(int_,int_,int_,int_,float_)
*duringP(int_,int_,int_,int_,float_)
*finishesP(int_,int_,int_,int_,float_)

equal(l1,u1,l2,u2) := (l1 == l2) & (u1 == u2) & (l1 <= u1) & (l2 <= u2)
before(l1,u1,l2,u2) := (u1 < l2) & (l1 <= u1) & (l2 <= u2) 
meets(l1,u1,l2,u2) := (l1 < l2) & (u1 < u2) & (u1 == l2) & (l1 <= u1) & (l2 <= u2) 
overlaps(l1,u1,l2,u2) := (l1 < l2) & (u1 < u2) & (u1 > l2) & (l1 <= u1) & (l2 <= u2)
starts(l1,u1,l2,u2) := (l1 == l2) & (u1 < u2) & (l1 <= u1) & (l2 <= u2)
during(l1,u1,l2,u2) := (l1 > l2) & (u1 < u2) & (l1 <= u1) & (l2 <= u2)
finishes(l1,u1,l2,u2) := (l1 > l2) & (l1 < u2) & (u1 == u2) & (l1 <= u1) & (l2 <= u2)

conf: !equalP(l1,u1,l2,u2,conf) v equal(l1,u1,l2,u2)
conf: !beforeP(l1,u1,l2,u2,conf) v before(l1,u1,l2,u2)
conf: !meetsP(l1,u1,l2,u2,conf) v meets(l1,u1,l2,u2)
conf: !overlapsP(l1,u1,l2,u2,conf) v overlaps(l1,u1,l2,u2)
conf: !startsP(l1,u1,l2,u2,conf) v starts(l1,u1,l2,u2)
conf: !duringP(l1,u1,l2,u2,conf) v during(l1,u1,l2,u2)
conf: !finishesP(l1,u1,l2,u2,conf) v finishes(l1,u1,l2,u2)